import ApiService from 'qualificame-kiosk/app/services/ApiService';
import { Notifications } from 'expo';
import Constants from 'expo-constants';
import * as Permissions from 'expo-permissions';
import { AsyncStorage } from "react-native";
import { resetKiosk } from 'qualificame-kiosk/app/actions/KioskActions';
import NavigationService from 'qualificame-kiosk/app/services/NavigationService.js';
import { getAuthData } from 'qualificame-kiosk/app/reducers';

export const LOGIN_BEGIN = 'LOGIN_BEGIN';
export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';
export const LOGIN_FAILURE = 'LOGIN_FAILURE';
export const CLEAR_AUTH = 'CLEAR_AUTH';
export const FETCH_USER_BEGIN = 'FETCH_USER_BEGIN';
export const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';
export const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE';
export const UPDATE_AUTH_DATA = 'UPDATE_AUTH_DATA';
export const RESET_LOADING = 'RESET_LOADING';
export const HUE = 'HUE';

export const hue = () => ({
	type: HUE
})

export function autenticateUser(result) {
	return dispatch => {
		dispatch(loginSuccess(result));
	};
}

export function refreshAuth() {
	return async (dispatch, getState) => {
		const tokenData = getAuthData(getState());
		return ApiService.getNewToken(tokenData.refresh_token)
			.then(
				result => {
					dispatch(updateAuthData(result));
				},
				error => {
					dispatch(logout());
					throw ({error: error, message: 'No se logró actualizar la sesión'});
				}
			)
	};
}

export function login(result) {
	return async dispatch => {
		await dispatch(autenticateUser(result));
		await dispatch(fetchUser());
	};
}

export function logout() {
	return async dispatch => {
		await dispatch(clearAuth());
		await dispatch(resetKiosk());
		NavigationService.navigate('WelcomeScreen');
	};
}

export function fetchUser () {
	return async dispatch => {
		dispatch(fetchUserBegin());
		return ApiService.getUser()
			.then(
				result => {
					dispatch(fetchUserSuccess(result.user));
				},
				error => {
					dispatch(fetchUserFailure(error))
					throw({error: error, message: 'No se encontró el usuario'})
				}
			)
	}
}

//Update
export const updateAuthData = authData => ({
	type: UPDATE_AUTH_DATA,
	payload: { authData }
})

//Login
export const loginBegin = () => ({
	type: LOGIN_BEGIN
})

export const resetIsLoading = () => ({
	type: RESET_LOADING
})
export const loginSuccess = authData => ({
	type: LOGIN_SUCCESS,
	payload: { authData }
})

export const loginFailure = error => ({
	type: LOGIN_FAILURE,
	payload: { error }
});

export const clearAuth = () => ({
	type: CLEAR_AUTH,
});

//USER
export const fetchUserBegin = () => ({
	type: FETCH_USER_BEGIN,
});

export const fetchUserSuccess = userData => ({
	type: FETCH_USER_SUCCESS,
	payload: { userData }
});

export const fetchUserFailure = error => ({
	type: FETCH_USER_FAILURE,
	payload: { error }
});